# This is a basic workflow to help you get started with Actions

name: Very simple CICD

on:
  push:
    tags:
      - "*"

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.os.runner }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - runner: ubuntu-latest
            name: ubuntu
          # - runner: macos-latest
          #   name: mac
          # - runner: windows-latest
          #   name: windows

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: false

      - name: Print runner.os, runner.workspace, matrix.os.runner, github.workspace
        run: echo 'runner.os == ${{ runner.os }}';
          echo 'runner.workspace == ${{ runner.workspace }}';
          echo 'matrix.os.runner == ${{ matrix.os.runner }}';
          echo 'github.workspace == ${{ github.workspace }}'

      - name: Create Build Environment
        run: cmake -E make_directory ${{ runner.workspace }}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{ runner.workspace }}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: Build
        working-directory: ${{ runner.workspace }}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE --verbose

      - name: Test
        working-directory: ${{ runner.workspace }}/build
        shell: bash
        run: ctest -C $BUILD_TYPE

      # Package and release for macOS
      - name: Prepare Artefacts macOS
        if: startsWith(matrix.os.runner, 'macOS')
        working-directory: ${{ github.workspace }}
        shell: bash
        run: |
          mkdir ${{ github.workspace }}/HelloWorld-${{ runner.os }}
          mv ${{ runner.workspace }}/build/HelloWorld_tests ${{ github.workspace }}/HelloWorld-${{ runner.os }}/HelloWorld_tests_${{ runner.os }};
          mv ${{ runner.workspace }}/build/say_HelloWorld ${{ github.workspace }}/HelloWorld-${{ runner.os }}/say_HelloWorld_${{ runner.os }};
          ls -Rla > ${{ github.workspace }}/HelloWorld-${{ runner.os }}/listing_${{ runner.os }}.txt;
          cd ${{ github.workspace }}
          zip -r -q HelloWorld-${{ runner.os }}.zip HelloWorld-${{ runner.os }}

      - name: Archive Artifacts macOS
        if: startsWith(matrix.os.runner, 'macOS')
        uses: actions/upload-artifact@v2
        with:
          name: HelloWorld-${{ runner.os }}
          path: HelloWorld-${{ runner.os }}.zip

      # Package and release for Linux
      - name: Prepare Artefacts Linux
        if: startsWith(matrix.os.runner, 'ubuntu')
        working-directory: ${{ github.workspace }}
        shell: bash
        run: |
          mkdir ${{ github.workspace }}/HelloWorld-${{ runner.os }}
          mv ${{ runner.workspace }}/build/HelloWorld_tests ${{ github.workspace }}/HelloWorld-${{ runner.os }}/HelloWorld_tests_${{ runner.os }};
          mv ${{ runner.workspace }}/build/say_HelloWorld ${{ github.workspace }}/HelloWorld-${{ runner.os }}/say_HelloWorld_${{ runner.os }};
          ls -Rla > ${{ github.workspace }}/HelloWorld-${{ runner.os }}/listing_${{ runner.os }}.txt;
          cd ${{ github.workspace }}
          zip -r -q HelloWorld-${{ runner.os }}.zip HelloWorld-${{ runner.os }}

      - name: Archive Artifacts Linux
        if: startsWith(matrix.os.runner, 'ubuntu')
        uses: actions/upload-artifact@v2
        with:
          name: HelloWorld-${{ runner.os }}
          path: HelloWorld-${{ runner.os }}.zip

      # Package and release for Windows
      - name: Prepare Artefacts Windows
        if: startsWith(matrix.os.runner, 'windows')
        working-directory: ${{ github.workspace }}
        shell: pwsh
        run: |
          $FolderName = "${{ github.workspace }}\HelloWorld-${{ runner.os }}"
          New-Item $FolderName -ItemType Directory
          Copy-Item "${{ runner.workspace }}\build\Debug\HelloWorld_tests.exe" -Destination "${{ github.workspace }}\HelloWorld-${{ runner.os }}"
          Copy-Item "${{ runner.workspace }}\build\Debug\say_HelloWorld.exe" -Destination "${{ github.workspace }}\HelloWorld-${{ runner.os }}"
          $DirectoryListing = Get-ChildItem -Path ${{ github.workspace }} -Recurse
          Set-Content -Path ${{ github.workspace }}\HelloWorld-${{ runner.os }}\listing_${{ runner.os }}.txt -Value ($DirectoryListing)
          $Archive = "HelloWorld-${{ runner.os }}.zip"
          7z a -tzip $Archive $FolderName

      - name: Archive Artifacts Windows
        if: startsWith(matrix.os.runner, 'windows')
        uses: actions/upload-artifact@v2
        with:
          name: HelloWorld-${{ runner.os }}
          path: HelloWorld-${{ runner.os }}.zip

      - name: Release Artifacts All
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          prerelease: false
          draft: false
          files: HelloWorld-${{ runner.os }}.zip
